//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MemexUpdateCommon.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationEntity", Namespace="http://schemas.datacontract.org/2004/07/AutomaticUpdatesWCF")]
    [System.SerializableAttribute()]
    public partial class ApplicationEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbsoulateRootPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MemexUpdateCommon.ServiceReference1.MDirs MDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbsoulateRootPath {
            get {
                return this.AbsoulateRootPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AbsoulateRootPathField, value) != true)) {
                    this.AbsoulateRootPathField = value;
                    this.RaisePropertyChanged("AbsoulateRootPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppName {
            get {
                return this.AppNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppNameField, value) != true)) {
                    this.AppNameField = value;
                    this.RaisePropertyChanged("AppName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppVersion {
            get {
                return this.AppVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.AppVersionField, value) != true)) {
                    this.AppVersionField = value;
                    this.RaisePropertyChanged("AppVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileCount {
            get {
                return this.FileCountField;
            }
            set {
                if ((this.FileCountField.Equals(value) != true)) {
                    this.FileCountField = value;
                    this.RaisePropertyChanged("FileCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MemexUpdateCommon.ServiceReference1.MDirs MDir {
            get {
                return this.MDirField;
            }
            set {
                if ((object.ReferenceEquals(this.MDirField, value) != true)) {
                    this.MDirField = value;
                    this.RaisePropertyChanged("MDir");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativePath {
            get {
                return this.RelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativePathField, value) != true)) {
                    this.RelativePathField = value;
                    this.RaisePropertyChanged("RelativePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MDirs", Namespace="http://schemas.datacontract.org/2004/07/AutomaticUpdatesWCF")]
    [System.SerializableAttribute()]
    public partial class MDirs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbsoulateRootPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.MDirs> DirsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.MFiles> FilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsForceUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbsoulateRootPath {
            get {
                return this.AbsoulateRootPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AbsoulateRootPathField, value) != true)) {
                    this.AbsoulateRootPathField = value;
                    this.RaisePropertyChanged("AbsoulateRootPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.MDirs> Dirs {
            get {
                return this.DirsField;
            }
            set {
                if ((object.ReferenceEquals(this.DirsField, value) != true)) {
                    this.DirsField = value;
                    this.RaisePropertyChanged("Dirs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.MFiles> Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForceUpdate {
            get {
                return this.IsForceUpdateField;
            }
            set {
                if ((this.IsForceUpdateField.Equals(value) != true)) {
                    this.IsForceUpdateField = value;
                    this.RaisePropertyChanged("IsForceUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativePath {
            get {
                return this.RelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativePathField, value) != true)) {
                    this.RelativePathField = value;
                    this.RaisePropertyChanged("RelativePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MFiles", Namespace="http://schemas.datacontract.org/2004/07/AutomaticUpdatesWCF")]
    [System.SerializableAttribute()]
    public partial class MFiles : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbsoulateRootPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtendNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsForceUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbsoulateRootPath {
            get {
                return this.AbsoulateRootPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AbsoulateRootPathField, value) != true)) {
                    this.AbsoulateRootPathField = value;
                    this.RaisePropertyChanged("AbsoulateRootPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtendName {
            get {
                return this.ExtendNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtendNameField, value) != true)) {
                    this.ExtendNameField = value;
                    this.RaisePropertyChanged("ExtendName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsForceUpdate {
            get {
                return this.IsForceUpdateField;
            }
            set {
                if ((this.IsForceUpdateField.Equals(value) != true)) {
                    this.IsForceUpdateField = value;
                    this.RaisePropertyChanged("IsForceUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativePath {
            get {
                return this.RelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativePathField, value) != true)) {
                    this.RelativePathField = value;
                    this.RaisePropertyChanged("RelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationInfo", Namespace="http://schemas.datacontract.org/2004/07/AutomaticUpdatesWCF")]
    [System.SerializableAttribute()]
    public partial class ApplicationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppVersionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppName {
            get {
                return this.AppNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AppNameField, value) != true)) {
                    this.AppNameField = value;
                    this.RaisePropertyChanged("AppName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppPath {
            get {
                return this.AppPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AppPathField, value) != true)) {
                    this.AppPathField = value;
                    this.RaisePropertyChanged("AppPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppVersion {
            get {
                return this.AppVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.AppVersionField, value) != true)) {
                    this.AppVersionField = value;
                    this.RaisePropertyChanged("AppVersion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DifferentFile", Namespace="http://schemas.datacontract.org/2004/07/AutomaticUpdatesWCF")]
    [System.SerializableAttribute()]
    public partial class DifferentFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbsoulteRootPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientFullPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MemexUpdateCommon.ServiceReference1.DifDescription DiffentValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceFullPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MemexUpdateCommon.ServiceReference1.FileType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbsoulteRootPath {
            get {
                return this.AbsoulteRootPathField;
            }
            set {
                if ((object.ReferenceEquals(this.AbsoulteRootPathField, value) != true)) {
                    this.AbsoulteRootPathField = value;
                    this.RaisePropertyChanged("AbsoulteRootPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientFullPath {
            get {
                return this.ClientFullPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientFullPathField, value) != true)) {
                    this.ClientFullPathField = value;
                    this.RaisePropertyChanged("ClientFullPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MemexUpdateCommon.ServiceReference1.DifDescription DiffentValue {
            get {
                return this.DiffentValueField;
            }
            set {
                if ((this.DiffentValueField.Equals(value) != true)) {
                    this.DiffentValueField = value;
                    this.RaisePropertyChanged("DiffentValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FilName {
            get {
                return this.FilNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FilNameField, value) != true)) {
                    this.FilNameField = value;
                    this.RaisePropertyChanged("FilName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentName {
            get {
                return this.ParentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentNameField, value) != true)) {
                    this.ParentNameField = value;
                    this.RaisePropertyChanged("ParentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceFullPath {
            get {
                return this.ServiceFullPathField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceFullPathField, value) != true)) {
                    this.ServiceFullPathField = value;
                    this.RaisePropertyChanged("ServiceFullPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MemexUpdateCommon.ServiceReference1.FileType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DifDescription", Namespace="http://schemas.datacontract.org/2004/07/AutomaticUpdatesWCF")]
    public enum DifDescription : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ForceUpdate = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileNotExistInClient = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileNotExistInServer = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirNotExistInClient = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DirNotExistInServer = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileSizeInconsistency = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FileVersionInconsistency = 7,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileType", Namespace="http://schemas.datacontract.org/2004/07/AutomaticUpdatesWCF")]
    public enum FileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dir = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAutomaticUpdateServer")]
    public interface IAutomaticUpdateServer {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/GetVersionByApplicationName", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/GetVersionByApplicationNameResponse")]
        string GetVersionByApplicationName(string applicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/GetServerPublishFiles", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/GetServerPublishFilesResponse")]
        MemexUpdateCommon.ServiceReference1.ApplicationEntity GetServerPublishFiles(string applicationName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/SetApplicationInfo", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/SetApplicationInfoResponse")]
        bool SetApplicationInfo(MemexUpdateCommon.ServiceReference1.ApplicationInfo appInf);
        
        // CODEGEN: 消息 DlFile 的包装名称(DlFile)以后生成的消息协定与默认值(DownLoadFile)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/DownLoadFile", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/DownLoadFileResponse")]
        MemexUpdateCommon.ServiceReference1.DlFileResult DownLoadFile(MemexUpdateCommon.ServiceReference1.DlFile request);
        
        // CODEGEN: 消息 UpFile 的包装名称(UpFile)以后生成的消息协定与默认值(UpLoadFile)不匹配
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/UpLoadFile", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/UpLoadFileResponse")]
        MemexUpdateCommon.ServiceReference1.UpFileResult UpLoadFile(MemexUpdateCommon.ServiceReference1.UpFile request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/DirIsExistOrCreate", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/DirIsExistOrCreateResponse")]
        bool DirIsExistOrCreate(string dirName, string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/GetAppList", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/GetAppListResponse")]
        System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.ApplicationEntity> GetAppList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/DeleteFile", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/DeleteFileResponse")]
        bool DeleteFile(string projectName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/GetDifferentList", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/GetDifferentListResponse")]
        System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.DifferentFile> GetDifferentList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/UpdateAppInfo", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/UpdateAppInfoResponse")]
        bool UpdateAppInfo(string appName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/DeleteAppInfo", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/DeleteAppInfoResponse")]
        bool DeleteAppInfo(string appName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/GetAppListFromTxtForce", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/GetAppListFromTxtForceResponse")]
        System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.ApplicationEntity> GetAppListFromTxtForce();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAutomaticUpdateServer/WriteLog", ReplyAction="http://tempuri.org/IAutomaticUpdateServer/WriteLogResponse")]
        void WriteLog(string message, bool isLog);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DlFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DlFile {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ProjectName;
        
        public DlFile() {
        }
        
        public DlFile(string FileName, string ProjectName) {
            this.FileName = FileName;
            this.ProjectName = ProjectName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DlFileResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DlFileResult {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool IsSuccess;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Message;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileStream;
        
        public DlFileResult() {
        }
        
        public DlFileResult(bool IsSuccess, string Message, long Size, System.IO.Stream FileStream) {
            this.IsSuccess = IsSuccess;
            this.Message = Message;
            this.Size = Size;
            this.FileStream = FileStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpFile {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ProjectName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Size;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileStream;
        
        public UpFile() {
        }
        
        public UpFile(string FileName, string ProjectName, long Size, System.IO.Stream FileStream) {
            this.FileName = FileName;
            this.ProjectName = ProjectName;
            this.Size = Size;
            this.FileStream = FileStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpFileResult", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpFileResult {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool IsSuccess;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Message;
        
        public UpFileResult() {
        }
        
        public UpFileResult(bool IsSuccess, string Message) {
            this.IsSuccess = IsSuccess;
            this.Message = Message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAutomaticUpdateServerChannel : MemexUpdateCommon.ServiceReference1.IAutomaticUpdateServer, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AutomaticUpdateServerClient : System.ServiceModel.ClientBase<MemexUpdateCommon.ServiceReference1.IAutomaticUpdateServer>, MemexUpdateCommon.ServiceReference1.IAutomaticUpdateServer {
        
        public AutomaticUpdateServerClient() {
        }
        
        public AutomaticUpdateServerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AutomaticUpdateServerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutomaticUpdateServerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AutomaticUpdateServerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetVersionByApplicationName(string applicationName) {
            return base.Channel.GetVersionByApplicationName(applicationName);
        }
        
        public MemexUpdateCommon.ServiceReference1.ApplicationEntity GetServerPublishFiles(string applicationName) {
            return base.Channel.GetServerPublishFiles(applicationName);
        }
        
        public bool SetApplicationInfo(MemexUpdateCommon.ServiceReference1.ApplicationInfo appInf) {
            return base.Channel.SetApplicationInfo(appInf);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemexUpdateCommon.ServiceReference1.DlFileResult MemexUpdateCommon.ServiceReference1.IAutomaticUpdateServer.DownLoadFile(MemexUpdateCommon.ServiceReference1.DlFile request) {
            return base.Channel.DownLoadFile(request);
        }
        
        public bool DownLoadFile(string FileName, string ProjectName, out string Message, out long Size, out System.IO.Stream FileStream) {
            MemexUpdateCommon.ServiceReference1.DlFile inValue = new MemexUpdateCommon.ServiceReference1.DlFile();
            inValue.FileName = FileName;
            inValue.ProjectName = ProjectName;
            MemexUpdateCommon.ServiceReference1.DlFileResult retVal = ((MemexUpdateCommon.ServiceReference1.IAutomaticUpdateServer)(this)).DownLoadFile(inValue);
            Message = retVal.Message;
            Size = retVal.Size;
            FileStream = retVal.FileStream;
            return retVal.IsSuccess;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MemexUpdateCommon.ServiceReference1.UpFileResult MemexUpdateCommon.ServiceReference1.IAutomaticUpdateServer.UpLoadFile(MemexUpdateCommon.ServiceReference1.UpFile request) {
            return base.Channel.UpLoadFile(request);
        }
        
        public bool UpLoadFile(string FileName, string ProjectName, long Size, System.IO.Stream FileStream, out string Message) {
            MemexUpdateCommon.ServiceReference1.UpFile inValue = new MemexUpdateCommon.ServiceReference1.UpFile();
            inValue.FileName = FileName;
            inValue.ProjectName = ProjectName;
            inValue.Size = Size;
            inValue.FileStream = FileStream;
            MemexUpdateCommon.ServiceReference1.UpFileResult retVal = ((MemexUpdateCommon.ServiceReference1.IAutomaticUpdateServer)(this)).UpLoadFile(inValue);
            Message = retVal.Message;
            return retVal.IsSuccess;
        }
        
        public bool DirIsExistOrCreate(string dirName, string projectName) {
            return base.Channel.DirIsExistOrCreate(dirName, projectName);
        }
        
        public System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.ApplicationEntity> GetAppList() {
            return base.Channel.GetAppList();
        }
        
        public bool DeleteFile(string projectName) {
            return base.Channel.DeleteFile(projectName);
        }
        
        public System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.DifferentFile> GetDifferentList() {
            return base.Channel.GetDifferentList();
        }
        
        public bool UpdateAppInfo(string appName) {
            return base.Channel.UpdateAppInfo(appName);
        }
        
        public bool DeleteAppInfo(string appName) {
            return base.Channel.DeleteAppInfo(appName);
        }
        
        public System.Collections.Generic.List<MemexUpdateCommon.ServiceReference1.ApplicationEntity> GetAppListFromTxtForce() {
            return base.Channel.GetAppListFromTxtForce();
        }
        
        public void WriteLog(string message, bool isLog) {
            base.Channel.WriteLog(message, isLog);
        }
    }
}
